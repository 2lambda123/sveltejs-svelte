/* input.svelte generated by Svelte vx.x.x */
import {
	SvelteComponent,
	append_styles,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "svelte/internal";

import "svelte/internal/disclose-version";

function add_css(target) {
	append_styles(target, "svelte-1nhdtod", "h1.svelte-1nhdtod{--bar:red}h2.svelte-1nhdtod{--baz:blue}");
}

function create_fragment(ctx) {
	let h1;
	let t1;
	let h2;

	return {
		c() {
			h1 = element("h1");
			h1.textContent = "Testing Styles";
			t1 = space();
			h2 = element("h2");
			h2.textContent = "Testing Styles 2";
			attr(h1, "class", "svelte-1nhdtod");
			attr(h2, "class", "svelte-1nhdtod");
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			insert(target, h2, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(h2);
			}
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const b = 2;
	return [b];
}

class Input extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { b: 0 }, add_css);
	}

	get b() {
		return this.$$.ctx[0];
	}
}

export default Input;
//# sourceMappingURL=_actual.js.map