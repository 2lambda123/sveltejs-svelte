/* This file is generated by scripts/process-messages.js. Do not edit! */

import { DEV } from 'esm-env';

var bold = 'font-weight: bold';
var normal = 'font-weight: normal';

/**
 * Tried to unmount a component that was not mounted
 * @param {boolean} trace
 */
export function lifecycle_double_unmount(trace) {
	if (DEV) {
		console.warn(`%c[svelte] ${"lifecycle_double_unmount"}\n%c${"Tried to unmount a component that was not mounted"}`, bold, normal);
		if (trace) console.trace('stack trace');
	} else {
		// TODO print a link to the documentation
		console.warn("lifecycle_double_unmount");
	}
}

/**
 * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%
 * @param {boolean} trace
 * @param {string} parent
 * @param {string} child
 * @param {string} owner
 */
export function ownership_invalid_binding(trace, parent, child, owner) {
	if (DEV) {
		console.warn(`%c[svelte] ${"ownership_invalid_binding"}\n%c${`${parent} passed a value to ${child} with \`bind:\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}`}`, bold, normal);
		if (trace) console.trace('stack trace');
	} else {
		// TODO print a link to the documentation
		console.warn("ownership_invalid_binding");
	}
}