/* generated by Svelte vX.Y.Z */
import { assign, createElement, detachNode, flush, init, insert, noop, proto, wrapTransition } from "svelte/shared.js";

function create_main_fragment(component, ctx) {
	var div, div_transition, current;

	return {
		c() {
			div = createElement("div");
			div.textContent = "foo";
		},

		m(target, anchor, introing) {
			insert(target, div, anchor);
			current = true;
		},

		p: noop,

		i(target, anchor) {
			if (current) return;
			if (component.root._intro) {
				if (div_transition) div_transition.invalidate();

				component.root._aftercreate.push(() => {
					if (!div_transition) div_transition = wrapTransition(component, div, foo, {}, 1);
					div_transition.run(1, null);
				});
			}
			this.m(target, anchor);
		},

		o(outrocallback) {
			if (!current) return;

			if (!div_transition) div_transition = wrapTransition(component, div, foo, {}, 0);
			div_transition.run(0, () => {
				outrocallback();
				div_transition = null;
			});

			current = false;
		},

		d(detach) {
			if (detach) {
				detachNode(div);
				if (div_transition) div_transition.abort();
			}
		}
	};
}

function SvelteComponent(options) {
	init(this, options);
	this._state = assign({}, options.data);
	this._intro = true;

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		this._fragment.c();
		this._mount(options.target, options.anchor);

		flush(this);
	}
}

assign(SvelteComponent.prototype, proto);
export default SvelteComponent;