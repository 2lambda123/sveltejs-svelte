/* input.svelte generated by Svelte vx.x.x */
import {
	SvelteComponent,
	append,
	append_styles,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	text
} from "svelte/internal";

import "svelte/internal/disclose-version";

function add_css(target) {
	append_styles(target, "svelte-7ovt8f", "main.svelte-7ovt8f{font-weight:bold}");
}

function create_fragment(ctx) {
	let main;
	let div;
	let t;

	return {
		c() {
			main = element("main");
			div = element("div");
			t = text(/*name*/ ctx[0]);
			attr(main, "class", "svelte-7ovt8f");
		},
		m(target, anchor) {
			insert(target, main, anchor);
			append(main, div);
			append(div, t);
		},
		p(ctx, [dirty]) {
			if (dirty & /*name*/ 1) set_data(t, /*name*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(main);
			}
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { name } = $$props;
	console.log(name);

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
	};

	return [name];
}

class Input extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { name: 0 }, add_css);
	}
}

export default Input;
//# sourceMappingURL=_actual.js.map