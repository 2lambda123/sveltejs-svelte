/* generated by Svelte vX.Y.Z-alpha1 */
import { SvelteComponent as SvelteComponent_1, addListener, append, createElement, createText, detachNode, init, insert, noop, removeListener, run, safe_not_equal } from "svelte/internal.js";

function create_fragment(component, ctx) {
	var div, button0, text1, button1, text3, button2, current;

	function click_handler(event) {
		event.stopPropagation();
		event.preventDefault();
		handleClick(event);
	}

	return {
		c() {
			div = createElement("div");
			button0 = createElement("button");
			button0.textContent = "click me";
			text1 = createText("\n\t");
			button1 = createElement("button");
			button1.textContent = "or me";
			text3 = createText("\n\t");
			button2 = createElement("button");
			button2.textContent = "or me!";
			addListener(button0, click_handler);
			addListener(button1, "click", handleClick, { once: true, capture: true });
			addListener(button2, "click", handleClick, true);
			addListener(div, "touchstart", handleTouchstart, { passive: true });
		},

		m(target, anchor) {
			insert(target, div, anchor);
			append(div, button0);
			append(div, text1);
			append(div, button1);
			append(div, text3);
			append(div, button2);
			current = true;
		},

		p: noop,

		i(target, anchor) {
			if (current) return;
			this.m(target, anchor);
		},

		o: run,

		d(detach) {
			if (detach) {
				detachNode(div);
			}

			removeListener(button0, click_handler);
			removeListener(button1, "click", handleClick, { once: true, capture: true });
			removeListener(button2, "click", handleClick, true);
			removeListener(div, "touchstart", handleTouchstart, { passive: true });
		}
	};
}

function handleTouchstart() {
	// ...
}

function handleClick() {
	// ...
}

class SvelteComponent extends SvelteComponent_1 {
	constructor(options) {
		super();
		init(this, options, noop, create_fragment, safe_not_equal);
	}
}

export default SvelteComponent;