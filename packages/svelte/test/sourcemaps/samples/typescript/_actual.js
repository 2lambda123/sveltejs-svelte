/* input.svelte generated by Svelte vx.x.x */
import {
	SvelteComponent,
	append,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "svelte/internal";

import "svelte/internal/disclose-version";
import { onMount } from 'svelte';

function create_fragment(ctx) {
	let h1;
	let t1;
	let div;
	let t2;
	let t3;

	return {
		c() {
			h1 = element("h1");
			h1.textContent = "Hello world!";
			t1 = space();
			div = element("div");
			t2 = text("Counter value: ");
			t3 = text(/*count*/ ctx[0]);
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			insert(target, div, anchor);
			append(div, t2);
			append(div, t3);
		},
		p(ctx, [dirty]) {
			if (dirty & /*count*/ 1) set_data(t3, /*count*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(div);
			}
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let count = 0;

	onMount(() => {
		const id = setInterval(() => $$invalidate(0, count++, count), 1000);
		const clear = () => clearInterval(id);
		return clear;
	});

	return [count];
}

class Input extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Input;
//# sourceMappingURL=_actual.js.map