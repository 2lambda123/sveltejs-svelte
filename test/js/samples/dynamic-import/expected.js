/* generated by Svelte vX.Y.Z-alpha1 */
import { SvelteComponent as SvelteComponent_1, flush, init, mount_component, safe_not_equal } from "svelte/internal.js";

function func() {
	return import('./Foo.html');
}

function create_fragment(component, ctx) {
	var current;

	var lazyload = new ctx.LazyLoad({
		props: { load: func }
	});

	return {
		c() {
			lazyload.$$.fragment.c();
		},

		m(target, anchor) {
			mount_component(lazyload, target, anchor);
			current = true;
		},

		p: noop,

		i(target, anchor) {
			if (current) return;

			this.m(target, anchor);
		},

		o(outrocallback) {
			if (!current) return;

			if (lazyload) lazyload.$$.fragment.o(outrocallback);
			current = false;
		},

		d(detach) {
			lazyload.$destroy(detach);
		}
	};
}

function define($$self, $$props) {
	let { LazyLoad } = $$props;

	$$self.$$.get = () => ({ LazyLoad });

	$$self.$$.set = $$props => {
		if ('LazyLoad' in $$props) LazyLoad = $$props.LazyLoad;
	};
}

class SvelteComponent extends SvelteComponent_1 {
	constructor(options) {
		super();
		init(this, options, define, create_fragment, safe_not_equal);
	}

	get LazyLoad() {
		return this.$$.get().LazyLoad;
	}

	set LazyLoad(value) {
		this.$set({ LazyLoad: value });
		flush();
	}
}

export default SvelteComponent;